    Explanation of the Code

    Class Structure & Code Organization:
main class to SimpleBQDemo
Made SimpleBlockingQueue a generic class so it can hold any type, not just Runnable
Used LinkedList instead of ArrayList for more efficient queue operations
Used removeFirst() to ensure proper FIFO behavior
Made the worker thread a daemon thread so the program can exit when the main thread completes
Added better error handling with proper InterruptedException management
Included more descriptive console output to show program flow
Added task IDs to make it easier to follow task execution
Split functionality into logical static methods to improve readability
Added descriptive method and class names
Added comments to explain the purpose of each component

    Thread Safety:
Maintained the synchronized methods for thread safety
Kept the wait/notify mechanism to properly block and wake threads

    The code demonstrates the core concepts of a blocking queue:
A thread that needs an element from an empty queue will wait
When an element is added to the queue, a waiting thread is notified
The queue operations are thread-safe through synchronization

    Conclusion:
This simplified version maintains the educational value of showing how a basic blocking queue works while being more readable and structured.

